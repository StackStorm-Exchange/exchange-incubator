name: Bootstrack Pack from PR

on:
#  pull_request_target:
#    types: [labeled]
#  pull_request_review:
#    types: [submitted]
  issue_comment:
    types: created

# need vars:
#   env.PACK_ORG: StackStorm-Exchange
#   env.PACK_REPO_PREFIX: stackstorm
#   env.PACK_REPO_TEMPLATE: StackStorm-Exchange/exchange-template
#   env.TSC_TEAM: TSC
#
# need secrets:
#   env.GH_TOKEN: admin bot PAT w/ scopes public_repo, workflow, write:org
#   env.SLACK_WEBHOOK_URL

jobs:
  permissions_check:
    # "!bootstrap pack" comment on pull requests
    if: >-
      github.event.issue.pull_request
      && contains(
      ['OWNER', 'MEMBER', 'COLLABORATOR'],
      github.event.comment.author_association
      )
      && github.event.comment.body == '!bootstrap pack'
    # author_association enum def
    # https://docs.github.com/en/graphql/reference/enums#commentauthorassociation
      
    runs-on: ubuntu-latest
    steps:
      # the commentator has write access to the incubator
      # so no more group membership validation required.
      - name: Add allowed emoji reaction
        # maybe one of these
        :unlock: 🔓
        :key: 🗝️
        :inbox_tray: 📥
        :outbox_tray: 📤
        :heavy_check_mark: ✔️
        :gear: ⚙️
        :robot: 🤖
        :yellow_circle: 🟡

  ready_to_merge_check:
    needs: [permissions_check]
    runs-on: ubuntu-latest
    steps:
      - name: Make sure incubator PR is approved
        shell: bash
        run: >-
          [[ $(gh api /repos/${{ github.repository }}/pulls/${{ github.event.issue.number }}/reviews
          --jq '[.[] |
          select(.author_association=="OWNER" or .author_association=="COLLABORATOR") |
          select(.state=="APPROVED" or .state=="CHANGES_REQUESTED") |
          .state == "APPROVED"] | (.|all) and (.|length>0)'
          ) == "true" ]]

      - name: Make sure CI workflow is passing for PR
        shell: bash
        run: |
          [[ $(gh api graphql \
          -F owner=${{ github.repository_owner }} \
          -F repo=${{ github.event.repository.name }} \
          -F pull_number=${{ github.event.issue.number }} \
          'query($owner: String!, $repo: String!, $pull_number: Int!) {
            repository(owner: $owner, name:$repo) {
              pullRequest(number:$pull_number) {
                commits(last: 1) {
                  nodes {
                    commit {
                      statusCheckRollup {
                        state
                      }
                    }
                  }
                }
              }
            }
          }')  == "true" ]]

      - name: Publish status in incubator PR comment # and/or label

  extract_pack_details:
    needs: [permissions_check, ready_to_merge_check]
    runs-on: ubuntu-latest
    steps:
      - name: Extract Pack Details
        id: pack-details
        # TODO: switch from @gha to @master
        uses: StackStorm-Exchange/ci/.github/actions/extract-pack-meta.yaml@gha
        with:
          pack-directory: incubator
          repository: ${{ github.repository }}
          # expects an issue_comment event
          ref: pull/${{ github.event.issue.number }}/head
          fetch-depth: 0
    outputs:
      pack_name: ${{ steps.pack-details.outputs.pack_name }}
      pack_ref: ${{ steps.pack-details.outputs.pack_ref }}
      pack_description: ${{ steps.pack-details.outputs.pack_description }}
      pack_path: ${{ steps.pack-details.outputs.pack_path }}
      in_submodule: ${{ steps.pack-details.outputs.in_submodule }}
      in_subdir: ${{ steps.pack-details.outputs.in_subdir }}

  bootstrap_pack_repo:
    needs: [extract_pack_details]
    name: New Pack # / Bootstrap Repo
    # TODO: switch from @gha to @master
    uses: StackStorm-Exchange/ci/.github/workflows/pack-bootstrap_repo.yaml@gha
    # TODO: setup protected branch with required pr review and checks
    with:
      # secrets
      admin_token: "" # TODO: admin PAT with scopes: public_repo, workflows, org:write
      slack_webhook_url: "" # TODO
      # TODO: validate that this || works as expected
      pack_name: ${{ jobs.extract_pack_details.outputs.pack_ref || jobs.extract_pack_details.outputs.pack_name }}
      pack_description: ${{ jobs.extract_pack_details.outputs.pack_description }}

  # based on
  # https://github.com/StackStorm-Exchange/exchange-incubator/issues/7#issuecomment-923614663
  # https://github.com/StackStorm-Exchange/exchange-incubator/issues/7#issuecomment-281247786
  create_pack_pr:
    needs: [extract_pack_details, bootstrap_pack]
    runs-on: ubuntu-latest
    steps:
      - name: Setup environment
        shell: bash
        run: |
          mkdir -p ${HOME}/.local/bin
          echo "$HOME/.local/bin" >> $GITHUB_PATH

      - name: Install git-filter-branch
        if: jobs.extract_pack_details.outputs.in_submodule == 'false'
        # yes, this is only one python file. instructions say to put it on the PATH.
        shell: bash
        run: |
          curl https://raw.githubusercontent.com/newren/git-filter-repo/v2.34.0/git-filter-repo -o ${HOME}/.local/bin/git-filter-repo
          chmod +x ${HOME}/.local/bin/git-filter-repo

      - name: Checkout pack repo
        uses: actions/checkout@v2
        with:
          repository: ${{ jobs.bootstrap_pack_repo.outputs.pack_repo }}
          path: pack
          fetch-depth: 0
          persist-credentials: false

      - name: Checkout incubator
        uses: actions/checkout@v2
        with:
          path: incubator
          fetch-depth: 0

      - name: Checkout Incubator PR
        working-directory: incubator
        shell: bash
        run: |
          git fetch origin pull/${{ github.event.issue.number }}/head:pr
          git checkout pr
          git submodule init
          git submodule update --remote

      # for git-filter-branch usage see:
      # https://www.mankier.com/1/git-filter-repo

      - name: Move pack to root of repo
        if: jobs.extract_pack_details.outputs.in_submodule == 'false'
        working-directory: incubator
        shell: bash
        run: |
          PACK_DIR=$(
            realpath --relative-to="${PWD}" '${{ jobs.extract_pack_details.outputs.pack_path }}'
          )
          git-filter-branch --sudirectory-filter "${PACK_DIR}"

      - name: Add incubator as git remote
        if: jobs.extract_pack_details.outputs.in_submodule == 'false'
        working-directory: pack
        shell: bash
        run: |
          git remote add source ../incubator
          git fetch source

      - name: Add git remote for source repo in incubator submodule
        if: jobs.extract_pack_details.outputs.in_submodule == 'true'
        working-directory: pack
        shell: bash
        run: |
          git remote add source ${{ jobs.extract_pack_details.outputs.pack_path }}
          git fetch source

      - name: Create branch for initial pack content
        working-directory: pack
        shell: bash
        run: |
          git checkout -b transfer

      - name: Pull source history into pack repo
        working-directory: pack
        shell: bash
        # ort strategy replaces recursive strategy on git 2.33+
        # ours => Fix merge conflicts by preferring exchange-provided files
        #         (which should be a minimal required set of files).
        #         Update the PR before merging if needed.
        run: |
          git pull source HEAD --allow-unrelated-histories -s ort -X ours

      - name: Create initial content PR on pack repo
        working-directory: pack
        shell: bash
        # gh handles pushing using the token before creating the PR
        run: |
          gh pr create \
          --title "Transfer ${{ jobs.extract_pack_details.outputs.pack_name }} pack from Incubator"
          --body "\
          Pack: ${{ jobs.extract_pack_details.outputs.pack_name }}\n\
          Description: ${{ jobs.extract_pack_details.outputs.pack_description }}\n\
          Incubator PR: ${{ github.event.issue.html_url }}"

      - name: Publish status in incubator PR comment # and/or label
