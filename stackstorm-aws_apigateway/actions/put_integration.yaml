---
description: 
pack: aws_apigateway
enabled: true
entry_point: run.py
name: put_integration
runner_type: python-script
parameters:
  action:
    default: put_integration
    immutable: true
    type: string
  cls:
    default: apigateway
    type: string
  headers:
    type: string
  module_path:
    default: boto3
    immutable: true
    type: string
  restApiId:
    type: string
    description: "Specifies a put integration request's API identifier."
    required: true
  resourceId:
    type: string
    description: "Specifies a put integration request's resource ID."
    required: true
  httpMethod:
    type: string
    description: "Specifies a put integration request's HTTP method."
    required: true
  type:
    type: string
    description: "Specifies a put integration input's type."
    required: true
  integrationHttpMethod:
    type: string
    description: "Specifies a put integration HTTP method. When the integration type is HTTP or AWS, this field is required."
  uri:
    type: string
    description: "Specifies a put integration input's Uniform Resource Identifier (URI). When the integration type is HTTP or AWS, this field is required. For integration with Lambda as an AWS service proxy, this value is of the 'arn:aws:apigateway:&lt;region&gt;:lambda:path/2015-03-31/functions/&lt;functionArn&gt;/invocations' format."
  credentials:
    type: string
    description: "Specifies whether credentials are required for a put integration."
  requestParameters:
    type: object
    description: "Represents request parameters that are sent with the backend request. Request parameters are represented as a key/value map, with a destination as the key and a source as the value. A source must match an existing method request parameter, or a static value. Static values must be enclosed with single quotes, and be pre-encoded based on their destination in the request. The destination must match the pattern integration.request.{location}.{name}, where location is either querystring, path, or header. name must be a valid, unique parameter name."
  requestTemplates:
    type: object
    description: "Represents a map of Velocity templates that are applied on the request payload based on the value of the Content-Type header sent by the client. The content type value is the key in this map, and the template (as a String) is the value."
  passthroughBehavior:
    type: string
    description: "Specifies the pass-through behavior for incoming requests based on the Content-Type header in the request, and the available requestTemplates defined on the Integration. There are three valid values: WHEN_NO_MATCH, WHEN_NO_TEMPLATES, and NEVER.  WHEN_NO_MATCH passes the request body for unmapped content types through to the Integration backend without transformation. NEVER rejects unmapped content types with an HTTP 415 'Unsupported Media Type' response. WHEN_NO_TEMPLATES will allow pass-through when the Integration has NO content types mapped to templates. However if there is at least one content type defined, unmapped content types will be rejected with the same 415 response."
  cacheNamespace:
    type: string
    description: "Specifies a put integration input's cache namespace."
  cacheKeyParameters:
    type: array
    description: "Specifies a put integration input's cache key parameters."