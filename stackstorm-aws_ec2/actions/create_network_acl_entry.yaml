---
description: 
pack: aws_ec2
enabled: true
entry_point: run.py
name: create_network_acl_entry
runner_type: python-script
parameters:
  action:
    default: create_network_acl_entry
    immutable: true
    type: string
  cls:
    default: ec2
    type: string
  headers:
    type: string
  module_path:
    default: boto3
    immutable: true
    type: string
  NetworkAclId:
    type: string
    description: "The ID of the network ACL."
    required: true
  RuleNumber:
    type: integer
    description: "The rule number for the entry (for example, 100). ACL entries are processed in ascending order by rule number. Constraints: Positive integer from 1 to 32766. The range 32767 to 65535 is reserved for internal use."
    required: true
  Protocol:
    type: string
    description: "The protocol. A value of -1 means all protocols."
    required: true
  RuleAction:
    type: string
    description: "Indicates whether to allow or deny the traffic that matches the rule."
    required: true
  Egress:
    type: boolean
    description: "Indicates whether this is an egress rule (rule is applied to traffic leaving the subnet)."
    required: true
  CidrBlock:
    type: string
    description: "The network range to allow or deny, in CIDR notation (for example 172.16.0.0/24)."
    required: true
  DryRun:
    type: boolean
    description: "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation."
  IcmpTypeCode:
    type: object
    description: "ICMP protocol: The ICMP type and code. Required if specifying ICMP for the protocol."
  PortRange:
    type: object
    description: "TCP or UDP protocols: The range of ports the rule applies to."