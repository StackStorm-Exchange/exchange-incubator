---
description: 
pack: aws_ecs
enabled: true
entry_point: run.py
name: deregister_container_instance
runner_type: python-script
parameters:
  action:
    default: deregister_container_instance
    immutable: true
    type: string
  cls:
    default: ecs
    type: string
  headers:
    type: string
  module_path:
    default: boto3
    immutable: true
    type: string
  containerInstance:
    type: string
    description: "The container instance ID or full Amazon Resource Name (ARN) of the container instance to deregister. The ARN contains the arn:aws:ecs namespace, followed by the region of the container instance, the AWS account ID of the container instance owner, the container-instance namespace, and then the container instance ID. For example, arn:aws:ecs:region:aws_account_id:container-instance/container_instance_ID ."
    required: true
  cluster:
    type: string
    description: "The short name or full Amazon Resource Name (ARN) of the cluster that hosts the container instance to deregister. If you do not specify a cluster, the default cluster is assumed."
  force:
    type: boolean
    description: "Forces the deregistration of the container instance. If you have tasks running on the container instance when you deregister it with the force option, these tasks remain running and they continue to pass Elastic Load Balancing load balancer health checks until you terminate the instance or the tasks stop through some other means, but they are orphaned (no longer monitored or accounted for by Amazon ECS). If an orphaned task on your container instance is part of an Amazon ECS service, then the service scheduler starts another copy of that task, on a different container instance if possible."