---
description: 
pack: aws_lambda
enabled: true
entry_point: run.py
name: create_function
runner_type: python-script
parameters:
  action:
    default: create_function
    immutable: true
    type: string
  cls:
    default: lambda
    type: string
  headers:
    type: string
  module_path:
    default: boto3
    immutable: true
    type: string
  FunctionName:
    type: string
    description: "The name you want to assign to the function you are uploading. The function names appear in the console and are returned in the ListFunctions API. Function names are used to specify functions to other AWS Lambda APIs, such as Invoke. "
    required: true
  Runtime:
    type: string
    description: "The runtime environment for the Lambda function you are uploading. "
    required: true
  Role:
    type: string
    description: "The Amazon Resource Name (ARN) of the IAM role that Lambda assumes when it executes your function to access any other Amazon Web Services (AWS) resources. For more information, see AWS Lambda: How it Works. "
    required: true
  Handler:
    type: string
    description: "The function within your code that Lambda calls to begin execution. For Node.js, it is the module-name.export value in your function. For Java, it can be package.class-name::handler or package.class-name. For more information, see Lambda Function Handler (Java). "
    required: true
  Code:
    type: object
    description: "The code for the Lambda function. "
    required: true
  Description:
    type: string
    description: "A short, user-defined function description. Lambda does not use this value. Assign a meaningful description as you see fit."
  Timeout:
    type: integer
    description: "The function execution time at which Lambda should terminate the function. Because the execution time has cost implications, we recommend you set this value based on your expected execution time. The default is 3 seconds. "
  MemorySize:
    type: integer
    description: "The amount of memory, in MB, your Lambda function is given. Lambda uses this memory size to infer the amount of CPU and memory allocated to your function. Your function use-case determines your CPU and memory requirements. For example, a database operation might need less memory compared to an image processing function. The default value is 128 MB. The value must be a multiple of 64 MB."
  Publish:
    type: boolean
    description: "This boolean parameter can be used to request AWS Lambda to create the Lambda function and publish a version as an atomic operation. "
  VpcConfig:
    type: object
    description: "If your Lambda function accesses resources in a VPC, you provide this parameter identifying the list of security group IDs and subnet IDs. These must belong to the same VPC. You must provide at least one security group and one subnet ID."