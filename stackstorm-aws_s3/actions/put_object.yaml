---
description: 
pack: aws_s3
enabled: true
entry_point: run.py
name: put_object
runner_type: python-script
parameters:
  action:
    default: put_object
    immutable: true
    type: string
  cls:
    default: s3
    type: string
  headers:
    type: string
  module_path:
    default: boto3
    immutable: true
    type: string
  Bucket:
    type: string
    description: "Name of the bucket to which the PUT operation was initiated."
    required: true
  Key:
    type: string
    description: "Object key for which the PUT operation was initiated."
    required: true
  ACL:
    type: string
    description: "The canned ACL to apply to the object."
  Body:
    type: string
    description: "Object data."
  CacheControl:
    type: string
    description: "Specifies caching behavior along the request/reply chain."
  ContentDisposition:
    type: string
    description: "Specifies presentational information for the object."
  ContentEncoding:
    type: string
    description: "Specifies what content encodings have been applied to the object and thus what decoding mechanisms must be applied to obtain the media-type referenced by the Content-Type header field."
  ContentLanguage:
    type: string
    description: "The language the content is in."
  ContentLength:
    type: integer
    description: "Size of the body in bytes. This parameter is useful when the size of the body cannot be determined automatically."
  ContentMD5:
    type: string
    description: "The base64-encoded 128-bit MD5 digest of the part data."
  ContentType:
    type: string
    description: "A standard MIME type describing the format of the object data."
  Expires:
    type: string
    description: "The date and time at which the object is no longer cacheable."
  GrantFullControl:
    type: string
    description: "Gives the grantee READ, READ_ACP, and WRITE_ACP permissions on the object."
  GrantRead:
    type: string
    description: "Allows grantee to read the object data and its metadata."
  GrantReadACP:
    type: string
    description: "Allows grantee to read the object ACL."
  GrantWriteACP:
    type: string
    description: "Allows grantee to write the ACL for the applicable object."
  Metadata:
    type: object
    description: "A map of metadata to store with the object in S3."
  ServerSideEncryption:
    type: string
    description: "The Server-side encryption algorithm used when storing this object in S3 (e.g., AES256, aws:kms)."
  StorageClass:
    type: string
    description: "The type of storage to use for the object. Defaults to 'STANDARD'."
  WebsiteRedirectLocation:
    type: string
    description: "If the bucket is configured as a website, redirects requests for this object to another object in the same bucket or to an external URL. Amazon S3 stores the value of this header in the object metadata."
  SSECustomerAlgorithm:
    type: string
    description: "Specifies the algorithm to use to when encrypting the object (e.g., AES256)."
  SSECustomerKey:
    type: string
    description: "Specifies the customer-provided encryption key for Amazon S3 to use in encrypting data. This value is used to store the object and then it is discarded; Amazon does not store the encryption key. The key must be appropriate for use with the algorithm specified in the x-amz-server-side​-encryption​-customer-algorithm header."
  SSECustomerKeyMD5:
    type: string
    description: "Specifies the 128-bit MD5 digest of the encryption key according to RFC 1321. Amazon S3 uses this header for a message integrity check to ensure the encryption key was transmitted without error."
  SSEKMSKeyId:
    type: string
    description: "Specifies the AWS KMS key ID to use for object encryption. All GET and PUT requests for an object protected by AWS KMS will fail if not made via SSL or using SigV4. Documentation on configuring any of the officially supported AWS SDKs and CLI can be found at http://docs.aws.amazon.com/AmazonS3/latest/dev/UsingAWSSDK.html#specify-signature-version"
  RequestPayer:
    type: string
    description: ""