---
description: 
pack: aws_s3
enabled: true
entry_point: run.py
name: upload_part
runner_type: python-script
parameters:
  action:
    default: upload_part
    immutable: true
    type: string
  cls:
    default: s3
    type: string
  headers:
    type: string
  module_path:
    default: boto3
    immutable: true
    type: string
  Bucket:
    type: string
    description: "Name of the bucket to which the multipart upload was initiated."
    required: true
  Key:
    type: string
    description: "Object key for which the multipart upload was initiated."
    required: true
  PartNumber:
    type: integer
    description: "Part number of part being uploaded. This is a positive integer between 1 and 10,000."
    required: true
  UploadId:
    type: string
    description: "Upload ID identifying the multipart upload whose part is being uploaded."
    required: true
  Body:
    type: string
    description: "Object data."
  ContentLength:
    type: integer
    description: "Size of the body in bytes. This parameter is useful when the size of the body cannot be determined automatically."
  ContentMD5:
    type: string
    description: "The base64-encoded 128-bit MD5 digest of the part data."
  SSECustomerAlgorithm:
    type: string
    description: "Specifies the algorithm to use to when encrypting the object (e.g., AES256)."
  SSECustomerKey:
    type: string
    description: "Specifies the customer-provided encryption key for Amazon S3 to use in encrypting data. This value is used to store the object and then it is discarded; Amazon does not store the encryption key. The key must be appropriate for use with the algorithm specified in the x-amz-server-side​-encryption​-customer-algorithm header. This must be the same encryption key specified in the initiate multipart upload request."
  SSECustomerKeyMD5:
    type: string
    description: "Specifies the 128-bit MD5 digest of the encryption key according to RFC 1321. Amazon S3 uses this header for a message integrity check to ensure the encryption key was transmitted without error."
  RequestPayer:
    type: string
    description: ""