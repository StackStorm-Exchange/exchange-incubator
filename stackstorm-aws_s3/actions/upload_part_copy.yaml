---
description: 
pack: aws_s3
enabled: true
entry_point: run.py
name: upload_part_copy
runner_type: python-script
parameters:
  action:
    default: upload_part_copy
    immutable: true
    type: string
  cls:
    default: s3
    type: string
  headers:
    type: string
  module_path:
    default: boto3
    immutable: true
    type: string
  Bucket:
    type: string
    description: ""
    required: true
  CopySource:
    type: string
    description: "The name of the source bucket and key name of the source object, separated by a slash (/). Must be URL-encoded."
    required: true
  Key:
    type: string
    description: ""
    required: true
  PartNumber:
    type: integer
    description: "Part number of part being copied. This is a positive integer between 1 and 10,000."
    required: true
  UploadId:
    type: string
    description: "Upload ID identifying the multipart upload whose part is being copied."
    required: true
  CopySourceIfMatch:
    type: string
    description: "Copies the object if its entity tag (ETag) matches the specified tag."
  CopySourceIfModifiedSince:
    type: string
    description: "Copies the object if it has been modified since the specified time."
  CopySourceIfNoneMatch:
    type: string
    description: "Copies the object if its entity tag (ETag) is different than the specified ETag."
  CopySourceIfUnmodifiedSince:
    type: string
    description: "Copies the object if it hasn't been modified since the specified time."
  CopySourceRange:
    type: string
    description: "The range of bytes to copy from the source object. The range value must use the form bytes=first-last, where the first and last are the zero-based byte offsets to copy. For example, bytes=0-9 indicates that you want to copy the first ten bytes of the source. You can copy a range only if the source object is greater than 5 GB."
  SSECustomerAlgorithm:
    type: string
    description: "Specifies the algorithm to use to when encrypting the object (e.g., AES256)."
  SSECustomerKey:
    type: string
    description: "Specifies the customer-provided encryption key for Amazon S3 to use in encrypting data. This value is used to store the object and then it is discarded; Amazon does not store the encryption key. The key must be appropriate for use with the algorithm specified in the x-amz-server-side​-encryption​-customer-algorithm header. This must be the same encryption key specified in the initiate multipart upload request."
  SSECustomerKeyMD5:
    type: string
    description: "Specifies the 128-bit MD5 digest of the encryption key according to RFC 1321. Amazon S3 uses this header for a message integrity check to ensure the encryption key was transmitted without error."
  CopySourceSSECustomerAlgorithm:
    type: string
    description: "Specifies the algorithm to use when decrypting the source object (e.g., AES256)."
  CopySourceSSECustomerKey:
    type: string
    description: "Specifies the customer-provided encryption key for Amazon S3 to use to decrypt the source object. The encryption key provided in this header must be one that was used when the source object was created."
  CopySourceSSECustomerKeyMD5:
    type: string
    description: "Specifies the 128-bit MD5 digest of the encryption key according to RFC 1321. Amazon S3 uses this header for a message integrity check to ensure the encryption key was transmitted without error."
  RequestPayer:
    type: string
    description: ""